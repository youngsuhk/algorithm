///*
//0과 1로만 이루어진 수를 이진수라 한다. 이러한 이진수 중 특별한 성질을 갖는 것들이 있는데, 이들을 이친수(pinary number)라 한다. 이친수는 다음의 성질을 만족한다.
//
//  1. 이친수는 0으로 시작하지 않는다.
//  2. 이친수에서는 1이 두 번 연속으로 나타나지 않는다. 즉, 11을 부분 문자열로 갖지 않는다.
//
//예를 들면 1, 10, 100, 101, 1000, 1001 등이 이친수가 된다. 하지만 0010101이나 101101은 각각 1, 2번 규칙에 위배되므로 이친수가 아니다.
//
//N(1 ≤ N ≤ 90)이 주어졌을 때, N자리 이친수의 개수를 구하는 프로그램을 작성하시오.
//*/
///*
//풀이
//n=1
//1
//n=2
//1	0
//n=3
//1	0	0
//1	0	1
//n=4
//1	0	0	0
//1	0	0	1
//1	0	1	0
//앞에서 2번째 자리까진 무조껀 1 0 으로 고정
//그 뒤부터 마지막이 
//0 일경우 뒷자리 0,1
//1 일경우 뒷자리 0   으로 고정
//즉 i+1은 i에서 0의 갯수 만큼 추가 i의 0의 갯수는 i-1의 개수 이기 때문에 
//dp[i]=dp[i-1]+dp[i-2] 성립
//*/
//#include <iostream>
//#include <algorithm>
//
//using namespace std;
//
//int main()
//{
//	int n;
//	long long int dp[100];
//	dp[1] = 1;
//	dp[2] = 1;
//	cin >> n;
//	for (int i = 3; i <= n; i++)
//	{
//		dp[i ] = dp[i-1]+dp[i-2];
//	}
//	cout << dp[n];
//}