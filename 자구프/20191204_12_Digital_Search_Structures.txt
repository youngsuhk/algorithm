/*
min/max heap으로 해결 불가능 한것은 ? 
insert,delete할때 모두 log만큼 걸린다.
leftist Tree, Birnomial heap, Fib heap : insert할땐 O(n)만 걸린다. -> meldable


DEQ,SMMH


search tree
BST Tree : 입력형식에 따라 hight의 크기가 엄청 커질 수 있다.
AVL Tree : htight의 크기가 차이가 날때 변경해주는 조건 (로테이션을 계속 해줘야 한다.)
Red_black Tree : 뎁스가 2배 이상 되지 않도록 (insert, delete가 가벼워짐)

하나의 node에 여러가지 key를 넣는것 b-tree
leap 노드에만 넣자 b+-tree

OST : string를 비교한다
prefix tree : 한 char씩 비교한다
suffix : string의 뒷부분부터 비교한다.
Trie : 

patricia tree : 뭔지 모르겠누
다윈 트라이(multiway trie)
:
*/